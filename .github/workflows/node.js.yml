# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - uses: actions/checkout@v3
    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "dir=$(npm config get cache)" >> "$GITHUB_OUTPUT"
    - name: Cache node modules
      id: npm-cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node${{ matrix.node-version }}-

    - name: Cache Cypress binary
      uses: actions/cache@v3
      with:
        path: ~/.cache/Cypress
        key: cypress-${{ runner.os }}-cypress-node${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          cypress-${{ runner.os }}-cypress-node${{ matrix.node-version }}-

    - name: Install dependencies
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Run tests
      run: |
        npm ci
        npm run test:unit && npm run build && npm run test:e2e
    - name: Save test video folder
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: video-${{ runner.os }}
        if-no-files-found: error
        path: tests/e2e/

  build-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - uses: actions/checkout@v3
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: pwsh
      run: |
        echo "dir=$(npm config get cache)" >> "${env:GITHUB_OUTPUT} "
    - name: Cache node modules
      id: npm-cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node${{ matrix.node-version }}-

    - name: Cache Cypress binary
      uses: actions/cache@v3
      with:
        path: ~/.cache/Cypress
        key: cypress-${{ runner.os }}-cypress-node${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          cypress-${{ runner.os }}-cypress-node${{ matrix.node-version }}-

    - name: Install dependencies
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Run tests
      run: |
        npm ci
        npm run test:unit && npm run build && npm run test:e2e

    - name: Save test video folder
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: video-${{ runner.os }}
        if-no-files-found: error
        path: tests/e2e/

  build-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - uses: actions/checkout@v3
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> "$GITHUB_OUTPUT"
      - name: Cache node modules
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node${{ matrix.node-version }}-

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-node${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-node${{ matrix.node-version }}-

      - name: Install dependencies
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run tests
        run: |
          npm ci
          npm run test:unit && npm run build && npm run test:e2e
      - name: Save test video folder
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: video-${{ runner.os }}
          if-no-files-found: error
          path: tests/e2e/
